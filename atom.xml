<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Jekyll Bootstrap</title>
 <link href="http://username.github.io/" rel="self"/>
 <link href="http://username.github.io"/>
 <updated>2013-07-11T17:58:01+08:00</updated>
 <id>http://username.github.io</id>
 <author>
   <name>Name Lastname</name>
   <email>blah@email.test</email>
 </author>

 
 <entry>
   <title>程序猿的日子 01</title>
   <link href="http://username.github.io/%E7%A8%8B%E5%BA%8F%E7%8C%BF/2013/07/11/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E6%97%A5%E5%AD%90-01"/>
   <updated>2013-07-11T00:00:00+08:00</updated>
   <id>http://username.github.io/%E7%A8%8B%E5%BA%8F%E7%8C%BF/2013/07/11/程序猿的日子-01</id>
   <content type="html">&lt;p&gt;程序猿的日子&lt;/p&gt;

&lt;p&gt;晚上下班回家的时候，已经是快9点了，对忙碌的程序猿来说，这还不算一个比较晚的时间。&lt;/p&gt;

&lt;p&gt;经过小区的广场时，突然决定停下里，在这里写点什么。&lt;/p&gt;

&lt;p&gt;如果说这个刚搬过来一个多月的新环境有什么让我非常喜欢的地方的话，那就是这个广场了，普通的瓷砖地，四周有一些简单的健身器材，再外层是木质走廊，顶上是一些说不上名字的藤蔓类的植物，而最“亮”的地方要属这个广场上的那两个白炽灯了，路灯一样的造型，只是稍矮一些，隐藏在树木的枝叶中，给整个夜晚的广场投下一种绿色柔和的浪漫氛围，还有些许微风————如果没有那些不受欢迎的蚊子的话，一切都显得很完美。&lt;/p&gt;

&lt;p&gt;今天又开了一整天的会，讨论关于产品下个版本的功能，这样的会总会给我一些很奇怪的感觉，让我又想起了曾经的所谓的创业的日子里和几个各部门的头头和老大耗在会议室里的日子，满是无休止的争论，满是无法被理解的失望与挫伤，那次失败的创业经历在我心里留下了不少阴影，这也是之后我选择在这家公司里安心做一名纯技术开发人员的原因之一。&lt;/p&gt;

&lt;p&gt;我有点喜欢观察人们在开会时的各种表现，尤其是争论起来的时候，我会去尝试分辨什么时候人们争论的仅仅是一个技术问题，而什么时候人们是在“捍卫”着某种类似信念的东西，我会试着去感受去思考，到底是什么让人和人之间的理解变得如此困难？&lt;/p&gt;

&lt;p&gt;“我是对的，你一直不理解我”，“我坚信这样做会有问题，虽然我也无法列举出明确的原因”， 很多时候，我感觉这才是大家内心真正的台词。&lt;/p&gt;

&lt;p&gt;我甚至怀疑开会讨论是否是一个正确的决策方式，甚至我怀疑人和人之间是否存在某种固定的行为模式使得能够达到彼此间的理解，或者说人和人的理解是否只发生在某种灵性的向度，而永远不会发生在会议室里。&lt;/p&gt;

&lt;p&gt;在会议室里，我也一直很低调，尽量避免陷入某种争论中，除了某些时候我觉得我的确有必要陈述某些观点，许多的时候我觉得大家并没有真正理解我所说的，也并不完全赞同我的方案，在以前的话，我一定会拼命争论直到有某个结果，而现在我已经不会这么做了，现在的我学会了妥协，学会了去理解别人对我的不理解。&lt;/p&gt;

&lt;p&gt;这也是某种难得的蜕变吧，对于一个追求追求完美的程序猿来说。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Socorro部署</title>
   <link href="http://username.github.io/google-breakpad%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%A8%E7%BD%B2/2013/05/30/socorro%E9%83%A8%E7%BD%B2"/>
   <updated>2013-05-30T00:00:00+08:00</updated>
   <id>http://username.github.io/google-breakpad%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%A8%E7%BD%B2/2013/05/30/socorro部署</id>
   <content type="html">&lt;h3 id='id14'&gt;简介&lt;/h3&gt;

&lt;p&gt;socorro为和google-breakpad配套使用的崩溃转储的服务端，功能强大，但也是我见到过的最复杂的项目，复杂到自己总不禁怀疑其复杂度是否真的有必要，同时也是个非常坑爹的开源项目，我是在修改了6、7处代码后才能正常使用其功能的，并且缺乏必要的文档，导致需要跟踪到代码深处才知道一些必要的数据格式细节。&lt;/p&gt;

&lt;p&gt;总而言之，这是个非常坑的项目，如果有其他选择，不推荐选择它。&lt;/p&gt;

&lt;p&gt;这篇文章在自己修改后的源码为基础，（同时我也添加了一些shell脚本，为方便使用） 另外的文章中介绍修改了哪些部分 (coming soon)&lt;/p&gt;

&lt;p&gt;git仓库 https://github.com/mozilla/socorro.git&lt;/p&gt;

&lt;p&gt;版本 DateDate: Tue Mar 5 17:46:10 2013 -0800&lt;/p&gt;

&lt;p&gt;commit f89c441cb5f035df0035e4283d03f653954e6edf&lt;/p&gt;

&lt;h3 id='id15'&gt;部署步骤&lt;/h3&gt;

&lt;h4 id='id16'&gt;下载资源&lt;/h4&gt;

&lt;p&gt;socorro,socorro-crashstats,tools下载 coming soon(等知道怎样解决压缩文件中文件权限的问题后上传）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install curl lessc&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='postgre'&gt;安装postgre&lt;/h4&gt;

&lt;p&gt;参见另一篇 postgre部署 (coming soon)&lt;/p&gt;

&lt;h4 id='id17'&gt;安装数据库客户端&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install pgadmin3&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='id18'&gt;导入数据库配置&lt;/h4&gt;

&lt;p&gt;tools/import_db.sh 会清空数据库，导入新的数据库配置（其中只包括通用配置，不包含产品信息）&lt;/p&gt;

&lt;h4 id='datasocorro'&gt;添加/data/socorro链接&lt;/h4&gt;

&lt;p&gt;socorro源码中假定socorro的目录为 /data/socorro，很不明白为什么要这么做，因为个人认为完全可以从可执行文件的当前路径计算出根目录，或者提供配置文件，怎么也不至于硬编码目录到源码中。 tools/socorro_link.sh 做个软链接到实际的socorro。(需要根据实际路径进行修改）&lt;/p&gt;

&lt;h4 id='product'&gt;添加product配置&lt;/h4&gt;

&lt;p&gt;执行SQL语句,假设你的产品名为SafeMobile,版本为3.4,平台为windows，发布日期为2013-03-05-000000&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;select add_new_product(&amp;quot;SafeMobile&amp;quot;::TEXT, 3.4::major_version)
select add_new_release(&amp;#39;SafeMobile&amp;#39;, &amp;#39;3.4&amp;#39;, &amp;#39;Release&amp;#39;, 20130305000000,&amp;#39;Windows&amp;#39;, 0, &amp;#39;release&amp;#39;)
select update_product_versions()&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='id19'&gt;启动服务器&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;tools/start_postgre.sh 启动数据库
tools/collector.sh     crash收集服务
tools/monitor.sh       监测有哪些crash文件被收集到了
tools/processor.sh     处理收集到的crash文件
tools/middleware.sh    为crashstates提供API服务
tools/crashstats.sh    用于显示崩溃信息的web服务器（利用middleware的API服务）

tools/crontabber.sh&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;像系统注册crontab任务，轮循地执行数据库任务，只需要注册一次，可以crontab -e 查看是否已经注册。 crontabber会在本地记录上一次运行某个任务是什么时候，以及多长时间间隔内需要进行一次任务，如果现在的时间离上次运行时间（记录在/socorro/crontabbers.json)离得很远，则crontab则可能会运行很长时间，一种方案是自己修改socorro/socorro/cron/crontabber.py中的时间配置，另一种方案是修改/socorro/crontabbers.json.&lt;/p&gt;

&lt;h4 id='id20'&gt;测试&lt;/h4&gt;

&lt;p&gt;执行submit.sh 提交crash进行测试 查看网页前端 http://localhost:8000/home/products/SafeMobile&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Google Breakpad客户端部署</title>
   <link href="http://username.github.io/google-breakpad%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%A8%E7%BD%B2/2013/05/29/google-breakpad%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%A8%E7%BD%B2"/>
   <updated>2013-05-29T00:00:00+08:00</updated>
   <id>http://username.github.io/google-breakpad%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%A8%E7%BD%B2/2013/05/29/google-breakpad客户端部署</id>
   <content type="html">&lt;h1 id='googlebreakpadwindows'&gt;google-breakpad客户端部署(windows平台）&lt;/h1&gt;

&lt;h3 id='id9'&gt;版本&lt;/h3&gt;

&lt;p&gt;&lt;a href='http://code.google.com/p/google-breakpad/'&gt;google-breakpad revision 1120&lt;/a&gt;&lt;/p&gt;

&lt;h3 id='id10'&gt;简介&lt;/h3&gt;

&lt;p&gt;google-breakpad提供了绝大部分平台上的崩溃处理，转储成统一的minidump格式，并且有配套的服务端socorro可以针对上传的minidump文件进行后续的堆栈解析、去重复、统计等功能。&lt;/p&gt;

&lt;p&gt;本文简单介绍下怎样在windows平台下将google-break嵌入到vc工程中。（其他平台和语言暂未实验）&lt;/p&gt;

&lt;h3 id='id11'&gt;原理&lt;/h3&gt;

&lt;p&gt;google-breakpad通过在程序启动时调用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SetUnhandledExceptionFilter()， _set_invalid_parameter_handler(),  _set_purecall_handler()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;向系统注册了异常处理的回调函数，当异常发生时，回调函数得到运行，并生成了minidump文件。 其实仅从生成Minidump的角度来说，自己编码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SetUnhandledExceptionFilter(myCallBack)
然后在myCallBack中调用MinidumpWriteDump()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一样可以生成minidump文件，而之所以选择google-break的原因，是因为&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;google-breakpad支持进程外抓取dump的方式，意味着在一些极限情况下（如程序已经耗尽了某些系统资源，如内存、句柄等或者自身堆栈已经出错，而无力再运行任何其他代码时——包括抓取Minidump的代码),可以由另一个进程相对安全地读取这个这个崩溃进程的快照，并为其生成Minidump。 （不过因为条件太极端，没有实际模拟测试过）&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;可以和socorro服务端配合使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;（而相对的google-breakpad的多平台支持的特性却未被使用到，因为目前我们产品只运行在windows平台上）。&lt;/p&gt;

&lt;h3 id='id12'&gt;部署步骤&lt;/h3&gt;

&lt;p&gt;因为我已经对google-breakpad做了一些封装，如果不太关心细节的话，可以直接傻瓜式调用即可。&lt;/p&gt;

&lt;h4 id='1_smutillib'&gt;1. 包含SMUtil.lib到工程中。&lt;/h4&gt;

&lt;h4 id='2_googlebreakpadinclude'&gt;2. 添加google-breakpad的include文件。&lt;/h4&gt;

&lt;h4 id='3_crashsenderexeupload_crashbatcurlexe'&gt;3. 将crashSender.exe，upload_crash.bat和curl.exe拷贝到发行目录中（路径随意）&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;此crashSender就是崩溃的时候弹出的一个对话框，征询用户是否同意发送crash文件的。目前还比较简陋，但后续会扩充，添加进一些比如问题描述，联系方式等新功能。&lt;/li&gt;

&lt;li&gt;upload_crash.bat只是个调用了curl用于发送crash文件的批处理.其中需要修改的是引用curl的路径，以及生成LOG的路径&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id='4_exedlldllexe'&gt;4. 在自己的exe工程中（如果是DLL工程，则需要更改调用此dll的EXE工程）的初始化函数中，添加如下代码&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;	SM::ExceptionHandler * pHandler = new SM::ExceptionHandler() ;
	std::wstring versionStr = MethodToGetYourProductVersion() ;
	std::wstring submitUrl = MethodToGetYourCrashDumpServerSumbitUrl() ;
	std::wstring crashPath = your/path/to/store/minidump ;
	std::wstring crashSender = your/path/to/crashSender ;
	pHandler-&amp;gt;Init(L&amp;quot;YourProductName&amp;quot;, versionStr, submitUrl, crashPath, crashSender) ;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='id13'&gt;写一个异常入测试&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;int * p = NULL ;
*p = 10 ;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接运行EXE，会看到弹出对话框询问是否发送错误报告，同时在crashPath中也能看到刚产生的.dmp文件了。&lt;/p&gt;

&lt;p&gt;如需进一步定制，或遇到问题，请联系我。&lt;/p&gt;

&lt;p&gt;&lt;a href='http://s.yunio.com/9R99Tl'&gt;打包资源下载&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Sourceindex技术</title>
   <link href="http://username.github.io/source%20index%E6%8A%80%E6%9C%AF/2013/05/28/sourceindex%E6%8A%80%E6%9C%AF"/>
   <updated>2013-05-28T00:00:00+08:00</updated>
   <id>http://username.github.io/source%20index%E6%8A%80%E6%9C%AF/2013/05/28/sourceindex技术</id>
   <content type="html">&lt;h3 id='id1'&gt;应用场合&lt;/h3&gt;

&lt;p&gt;你是否碰到过这样的场合，远程调试时attach到测试人员的机器的程序上，或者在打开某个crash文件时，发现自己找不到其对应版本的pdb，并且本地的源码也已经发生了变化，而无法调试？虽然通过细致的管理（如保存每个版本的pdb，check out对应的源码)，可以解决此问题，但是很显然我们需要的是一个在exe,pdb,source code间的保持同步的机制。&lt;/p&gt;

&lt;h3 id='id2'&gt;具体方案&lt;/h3&gt;

&lt;h4 id='pdbsource_code'&gt;在pdb和source code间保持同步&lt;/h4&gt;

&lt;p&gt;利用source index可以做到在pdb文件中嵌入额外的源码版本信息，以达到在pdb和对应版本源码之间保持同步的目的。&lt;/p&gt;

&lt;h4 id='execrashpdb'&gt;在exe(crash文件)和pdb间保持同步&lt;/h4&gt;

&lt;p&gt;可以在局域网中建立一台符号服务器，保存每个版本的pdb文件，以达到在exe(crash文件)和pdb之间保持同步的目的。&lt;/p&gt;

&lt;h3 id='id3'&gt;具体步骤&lt;/h3&gt;

&lt;h4 id='id4'&gt;准备环境&lt;/h4&gt;

&lt;p&gt;安装debugging tools for windows（我用的是v6.12,其他版本未测试过), 添加其中的srcsrv目录到PATH中，方便调用其中的许多命令。&lt;/p&gt;

&lt;p&gt;安装svn,推荐1.7版本以上（我用的是TortoiseSVN 1.7.12 64bit)，本文配置针对1.7（因为1.7修改了svn info的输出信息格式，因而需要稍改动下svn.pm文件）,确保svn.exe在PATH中，可以敲入命令svn info查看。&lt;/p&gt;

&lt;p&gt;确保svn版本是英文版的，因为程序中会需要解析svn info的输出信息。&lt;/p&gt;

&lt;p&gt;安装active perl,脚本中会用到。&lt;/p&gt;

&lt;p&gt;修改srcsrv/svn.pm，在ln 208的 if ($FileRevision)后插入一行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$LocalFile = &amp;quot;$SourceRoot\\$LocalFile&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='source_indexpdb'&gt;source index(嵌入版本信息到pdb中)&lt;/h4&gt;

&lt;p&gt;程序测试结束后，准备发布前，先提交代码，先使得svn服务器有此版本的代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd root\of\your\svn\repository&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;cd到svn仓库的根目录（虽然个人觉得这一步理论上并不是必须，只要能从当前目录及其子目录找到源码和版本之间的关系，哪怕只是一部分就可以了，但是实际使用中如果不是仓库的根目录，就不会成功）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svnindex /debug /source=root\of\your\svn\repository /symbols=path\of\pdb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如能看到类似&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;“ wrote C:\Users\ayao\AppData\Local\Temp\index103B1.stream to E:\Work\Project\LocalSvn\CrashTest\Debug\CrashTest.pdb ...”&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;表示pdb已经被嵌入了版本信息&lt;/p&gt;

&lt;p&gt;也可以用以下命令验证 srctool your\pdb\file 如果成功可看到类似输出&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[e:\work\project\localsvn\crashtest\main.cpp] cmd: cmd /c svn.exe cat &amp;quot;https://127.0.0.1:8443/svn/Test/CrashTest/main.cpp@7&amp;quot; --non-interactive &amp;gt; &amp;quot;E:\Work\Project\LocalSvn\svn\Test\CrashTest\main.cpp\7\main.cpp&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其实pdb文件是个开放的格式，其中的内容由不同的“流”组成，而微软提供的source index技术，就是在pdb中添加了一个名叫&amp;#8221;srcsrv&amp;#8221;的流，其中记录了这个PDB关联到的源文件在编译的时候在本地的地址，以及通过什么样的命令可以获取到，当vs在需要显示源码的时候，会先从看是否在能期待的路径中能找到源文件（这个期待的路径也就是程序被编译的时候的源码路径），如果找不到则会调用pdb中存储的命令行(&lt;strong&gt;注意！！只有在找不到的时候才会触发源码下载的流程，否则会使用本地的源文件，哪怕文件版本不一致，被这个坑了好久。。&lt;/strong&gt;），执行之，（这时VS会弹出提示询问是否执行这个脚本），然后期待这个命令执行后，在临时目录中就能有这些文件的存在，然后显示之。&lt;/p&gt;

&lt;h4 id='socorrosym_socorro'&gt;生成用于socorro(崩溃转储服务端的sym文件) (如果不用于socorro服务器，则不需要这一步)&lt;/h4&gt;

&lt;p&gt;&lt;a href='http://s.yunio.com/vecIze'&gt;generate-sym.bat下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将上述几个文件放在要pdb目录中(相匹配的exe也需要同样存在这个目录里），运行generate-sym.bat，顺利的话输出目录中会产生out目录，然后需要手工添加这些文件到socorro服务器中，原先考虑过在socorro服务器上同时添加ftp服务（或者SVN服务），然后可以方便上传这些符号文件，但觉得太倒腾，反正发布版本的频率也不会很高，手工拷过去算了。&lt;/p&gt;

&lt;h3 id='pdb'&gt;发布pdb(建立符号服务器）&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;symstore add /s \\pdb-server\pub_symbols /r /f path/to/pdb/\*pdb /t your-product-name&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中 &amp;#8220;\pdb-server\pub_symbols&amp;#8221; 为一个局域网中的共享目录（使得大家都能从此目录下载pdb文件），同时自己需要有这个目录的写权限&lt;/p&gt;

&lt;h3 id='id5'&gt;客户端设置&lt;/h3&gt;

&lt;p&gt;需要相应地设置VS以使用这些功能&lt;/p&gt;

&lt;h4 id='id6'&gt;添加符号服务器地址&lt;/h4&gt;

&lt;p&gt;option -&amp;gt; Debugging -&amp;gt; Symbols 中添加 Symbol file (.pdb) locations &amp;#8220;\pdb-server\pub_symbols&amp;#8221;&lt;/p&gt;

&lt;h4 id='source_server'&gt;打开source server支持&lt;/h4&gt;

&lt;p&gt;option -&amp;gt; Debugging -&amp;gt; General -&amp;gt; 勾选 Enable source server support 及其子选项 Print source server diagnostic messages to the Output window&lt;/p&gt;

&lt;h3 id='id7'&gt;参考链接&lt;/h3&gt;

&lt;p&gt;http://www.hufuman.biz/?tag=symstore&lt;/p&gt;

&lt;h3 id='id8'&gt;相关资源下载&lt;/h3&gt;

&lt;p&gt;&lt;a href='http://s.yunio.com/uemSbE&amp;quot;'&gt;ActivePerl-5.16.3.1603-MSWin32-x64-296746.msi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='http://s.yunio.com/zoUV5v'&gt;Debugging Tools for Windows (x64) v6.12.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='http://s.yunio.com/cE4hko&amp;quot;'&gt;Debugging Tools for Windows (x86) v6.12.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='http://s.yunio.com/CKBkUF'&gt;TortoiseSVN_x64_1_7_12.msi&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>短期出家 在青云寺的日子</title>
   <link href="http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2012/03/28/%E7%9F%AD%E6%9C%9F%E5%87%BA%E5%AE%B6-%E5%9C%A8%E9%9D%92%E4%BA%91%E5%AF%BA%E7%9A%84%E6%97%A5%E5%AD%90"/>
   <updated>2012-03-28T00:00:00+08:00</updated>
   <id>http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2012/03/28/短期出家-在青云寺的日子</id>
   <content type="html">&lt;p&gt;间隔年里的第二次静心之旅，选择在了浙江丽水的青云寺里。&lt;/p&gt;

&lt;p&gt;在网上看到的帖子，青云寺方丈妙德发愿，供养修行居士，提供免费吃住，提供海清和居士服，可以一直住到往生 （也就是一直住到死），我被这个妙德方丈的慷慨霸气震撼到了，甚至都有些担心这是真的么，要知道现在的社会，我们真的还能找到愿意做没有利益的事情的人？打了个电话问了问，不像是假的，网上搜了搜，应该是确有其事，其实在我的心里我也希望这是真的，不是因为那的免费吃住，而是当我相信有人并没有只为钱为利益而生活着的时候，会发觉这个世界是如此的美好。&lt;/p&gt;

&lt;p&gt;只是可惜走的时候，方丈不在寺院，本想当面感谢下他的，只能找师兄代转了，这是后话。并且，这件事也深刻地教会了我神马叫“舍得”，敢舍才会得到，据我后来观察，免费吃住并没有让寺院有丝毫的亏损，并且还获得了更多，原因有以下三点：一，寺庙里多加入了30个左右的修行的居士后，一下给寺庙增加了很多的人气，一定程度上吸引了更多的香客。二：通过在网上的大力宣传供养居士，也提高了不少寺庙的知名度。三：只要不是经济特别拮据的居士，离开后多少都会给些供养给寺庙，光凭这点，寺庙就不会亏。所以，真是应了那句老话——“舍得”。&lt;/p&gt;

&lt;p&gt;而其实之前我也没怎么接触过佛教，之所以选择在青云寺念佛，完全为了找寻一种内心的宁静，而当后来同寝室的同修问我学习佛法多久了，我说刚开始接触，他都瞪大了眼睛，一副不可思议的表情，一直说我有善根，也许吧，缘呗。&lt;/p&gt;

&lt;p&gt;离开了城市的喧嚣，在青云寺的日子显得非常的简单和质朴，我想应该可以称那些日子为我真正和自己呆在一起，离自己的内心最接近的日子吧，能让我更加地了解自己，理解生命，从另一个视角看曾经的城市中的日子，去了解自己真正想要的生活。&lt;/p&gt;

&lt;p&gt;刚到寺庙的前一两天感觉还不完全适应，同修都是学习佛法挺久的人，聊的东西我都还不太懂，也插不上什么话，每天下完晚课回寝室的时候，躺在床上听MP3，感觉是那么孤单，一种从未有过的那么深的孤单，我会想我的朋友，同学，会想曾经喜欢过的女孩，回想第一次牵她手的时候，回想第一次吻她的时候，想着直到睡着，然后直到凌晨4点的起床钟声再把我从睡梦中敲醒。&lt;/p&gt;

&lt;p&gt;寺庙的生活很简单，念佛、吃饭、睡觉，偶尔还有点体力活干，而所谓的念佛就是一群人排列成贪吃蛇状，在念佛堂绕佛念佛号“阿弥陀佛”，表面上看貌似有点癫的样子，却是佛教净土宗的一种很好的修行方法，可以很静心地和自己呆在一起，去了解自己的每个念头，每个思绪，记得在一本书上看到过说，这个世界其实不需要什么心理医生的，有所谓心理问题人只要把他关在一所房子里，关3个星期，什么心理疾病都会好，因为我们的心理和身体一样地拥有自愈的能力，类似的道理吧，城市生活的紧张忙碌有时会迷失自我，而我们缺少的仅仅是一些和自己相处的时间而已。&lt;/p&gt;

&lt;p&gt;而那些念佛的日子里，我也能够更加地了解自己，回想那些城市里的生活，像是在看另外一个演的电影，那些在城市里经历的挣扎、迷茫，那样历历在目，而每次有这样感觉的时候，我都会四下张望下——阿弥陀佛的佛像，贪吃蛇的队列，头顶的天花板，门外不远处的香炉，还有阳光透过窗户洒在念佛堂的地面上，有种时空交错的感觉，然后我会狠狠地掐自己几下——我不是在做梦吧？到底是一直在城市里生活的我，做了一个梦来到这念佛，还是原本我就是个修行的僧人，做了一个梦在城市里忙碌地生活了好几年？掐得挺疼，眼前的应该是真实的吧，有时候还不太信，于是又继续掐，掐到自己信为止。&lt;/p&gt;

&lt;p&gt;到寺庙的第三天，寺庙组织大家去放生，走了挺远的路，来到丽水附中那边那叫啥桥来着的地方，在桥下面，网袋里装了许多只王八，还有一些泥鳅，还有一些鱼，师父在主持着放生仪式，我们围成半圆，站在水边，我看着网袋里的王八拼命地想爬出袋口，无奈袋口被封了，也许是它看到了湖面了吧，它是那么激动，那么拼命地徒劳地想挣扎着出去。师父还在念着咒，大意是说这些鳖是因前世造孽，今生沦为畜生，今天给你们放生，望从今后能正念等。突然间，我仿佛从那个王八身上看到了自己（这个比喻有点尴尬），我们和此刻的它又有多大的区别呢，它挣扎在一个它无法挣脱的网袋中，而我们只是挣扎在一个更大的由欲望、恐惧、不安、痛苦交织的网中，我们又何时能挣脱？没有人知道。当仪式结束，大家打开袋口的时候，我看到那只王八，一下窜入水中，我想在那一刻它一定理解了“自由”的含义，大家在岸边唱着“南无阿弥陀佛”，像是给朋友送行，看着那只王八飘逸的自由的泳姿，那一刻我突然很想哭——有谁会给我们自己的生命放生么？。。。&lt;/p&gt;

&lt;p&gt;在寺庙里每天最开心的时候，就是4点半的晚饭后，在寺庙外的小路上散步的时候，路边的油菜花开的香味夹杂在雨后的泥土的味道里，仿佛穿越了时空带我回到小时候在农村的日子，似乎也是这样的小路，这样的泥土的味道，这样的了无牵挂，一种单纯的生命的感动，远处是连绵的小山，路边是稀稀落落的农家，有狗在门口淡定地看着我，有许多橘子树，还有池塘，很安静，那一刻，不想再向生命祈求更多。&lt;/p&gt;

&lt;p&gt;这一次出门也是继承之前的不带相机的习惯，甚至也没用手机拍一张照片，现在变得只愿意用心感受，而不愿意用相机记录了，就让这些美好的回忆永远放在记忆力吧，让我时常能回想起。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>搭车去绍兴</title>
   <link href="http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2011/04/05/%E6%90%AD%E8%BD%A6%E5%8E%BB%E7%BB%8D%E5%85%B4"/>
   <updated>2011-04-05T00:00:00+08:00</updated>
   <id>http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2011/04/05/搭车去绍兴</id>
   <content type="html">&lt;p&gt;许久前因朋友引诱，酝酿着一次搭车旅行，地图上查了查，往西就到自己家了，往北似乎没什么想去的地方，往南——绍兴，就这样定下了目的地。&lt;/p&gt;

&lt;p&gt;其实选择搭车的方式，也是一种体验，一种希望能依靠陌生人的帮助完成一件事的感觉，让自己相信在很多时刻，我们不是孤立地生存着，我们需要彼此的帮助，我们需要卸下一些防备，去信赖，去接受帮助。 上路后，才发现自己的运气这么好，先后搭了4辆车，在晚上8点左右的时候就搭到了绍兴县，让我喜出望外，我还以为第一天可能都出不了上海。。&lt;/p&gt;

&lt;p&gt;我喜欢那种搭车加徒步的感觉，走在国道上，两旁的田野盛开着油菜花，阳光很明媚，每天徒步10公里多，走累了，找个路口或者加油站收费站，开始搭车，我以为不会有人会停车，我以为人们都会很冷漠，但是我错了，还是会有车停下，也有司机会在加油站跟我聊天，问我去哪，我跟他们解释这是我的一种旅游方式，那些司机也饶有兴趣地听着。&lt;/p&gt;

&lt;p&gt;在绍兴玩了一天，去了鲁迅故居，人太多了，熙熙攘攘，咸亨酒店里，墙上依然挂着牌子“孔乙己欠19钱”，到现在还没还上，哎。晚上和旅馆隔壁的一帅哥一起去了沈园，去之前孤陋寡闻的我还不知道关于沈园的故事，到了陆游铜像那，看到了故事介绍，才知道陆游还有这么一段悲情的爱情故事，那两首《钗头凤》让我唏嘘不已，久久无语，看社戏演那段时竟落了泪，哎，是什么样的爱情会让人用一辈子的时间去祭奠，我宁愿一辈子也不会明白。&lt;/p&gt;

&lt;p&gt;第三天纠结了好久怎样安排行程，继续搭回去，还是坐车，最终还是选择搭车回去，但是时间有点紧，在徒步了2个多小时后，于是选个折中的方案，搭车到杭州，从杭州坐动车回去，如果时间来得及的话还可以考虑在西湖边逛逛，最好能喝杯茶什么的。&lt;/p&gt;

&lt;p&gt;于是当路过一个国道上的加油站的时候便停了下来，在加油站里磨着每一个过往的司机，问他们是不是往杭州方向，可不可以搭我一段，同时也费劲地解释我不是缺钱坐车，我只是在体验这种旅游的方式，后来一个加油站的女孩跑过来，问我是不是没钱坐车回去，如果是的话她可以给我20块钱，然后告诉我在什么地方可以做大巴车。。当时我很感动，很淳朴的一个女孩，我告诉她我很感激她，但真不是钱的问题，于是又将我的旅游方式解释了一遍，说了半天好像她理解了，感觉她们每天的工作也挺辛苦的，进来加油的车一辆接一辆，一刻也不停地忙乎，跟她聊天都断断续续的，后来我去店里买了两瓶绿茶，请她喝了瓶，后来我搭上了辆私家车，跟她告别了。&lt;/p&gt;

&lt;p&gt;搭我的是对小夫妻，男的是本地人，送她老婆去火车站回江西，她们也是对爱旅游的夫妻，所以看到我才觉得比较亲切，才搭的我，想想看也是缘分吧，刚好我也要到火车站，求之不得，一路上也跟他们聊得挺多，下车时我告诉他们我不知道怎么谢他们，祝你们幸福吧。。&lt;/p&gt;

&lt;p&gt;这次旅程也让我明白了，世上还是好人多，只是我们习惯性地不相信而已，只是我们一直认为“防人之心不可无”，而让我们错过了太多的精彩，也背上了太多的束缚，当打开自己的心，卸下那些防备时，才发现这个世界原来这么美好。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>骑行回家</title>
   <link href="http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2011/03/05/%E9%AA%91%E8%A1%8C%E5%9B%9E%E5%AE%B6"/>
   <updated>2011-03-05T00:00:00+08:00</updated>
   <id>http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2011/03/05/骑行回家</id>
   <content type="html">&lt;p&gt;每一次长途骑行都会让自己对“路”有深刻的体会，这次的过年的400公里归乡骑行路也是让我感触颇多。。&lt;/p&gt;

&lt;p&gt;上路的那天正是变天的日子，和煦温暖的阳光已成为昨日的记忆，第一天从上海到南浔附近的一个小镇子，天空一直是阴的，心情因为一些乱七八糟的事情还有那阴霾的天气也有些阴郁，一路上唱着歌，努力地振奋着精神，试着找回那种在路上的感觉。第一天骑了124公里。&lt;/p&gt;

&lt;p&gt;第二天9点出发，上路暴了个胎，因为当时在一个小镇子里，懒得自己换备用胎了，再说也是只带了一条内胎，于是想找个地方把胎补了，问了下路边的大爷有么有修车的地方，大爷遥指远处一个小巷内，把我指到了一个修摩托车的地方，然后修摩托的老板又把我指到了一个修汽车的地方，修汽车的老板说我提供工具给你，你自己补胎吧，不过要十块钱。。我相当无语，啥也不说了，找个路边僻静的角落，花了20分钟左右换上了自己带的备用内胎。&lt;/p&gt;

&lt;p&gt;下午刚出湖州的时候，碰到了两位苏州的车友，在下午的雨里跟他们一路骑了快50公里，其中包括318国道进入安徽段内，无比崎岖，无比泥泞的一段乡间公路，我被自行车胎带起的泥几乎淋湿了全身，鞋子也整个湿了，双脚感觉像是在冰窟窿里，整个人像是不小心掉到了泥塘里，然后挣扎着爬上来了一样。当晚，在旅馆里把衣服鞋子洗了，然后把鞋子袜子都拴在空调出风口下，让空调吹了一夜——吹干了。第二天到达广德，125公里。&lt;/p&gt;

&lt;p&gt;第三天是最后一天，也是最艰难的一天，早上出发时发现昨天刚换的胎就没气了，而我只带了一条备用内胎——昨天已经换过了，悲剧了，死马当活马医，先把气打满，所幸只是慢跑气，打满气还能支持个40多分钟，就休息的时候打一次气吧。&lt;/p&gt;

&lt;p&gt;早上的雪不知什么时候开始下的，只记得上路的时候雪就已经比较大了，越下越大，昨天刚“烘干”的鞋子，眼看着又要被地上带起的水淋湿了，（早知道穿防水的鞋子了，没经验）无奈，经过村子的时候找了位大妈要了两个塑料袋，把鞋子套起来，凑合着要好点。一路的雪景很美，国道两旁会有大片大片被白雪覆盖的田野，再远处是并行的高速，另一边是火车道，偶尔会有火车并行着在远处经过，很有感觉。记得好像在10点多的时候，雪下得好有激情，大片大片的被风卷起，然后不停地砸在脸上，眼睛都难以睁开。&lt;/p&gt;

&lt;p&gt;后来套了塑料袋的鞋子还是进水了，无奈经过个小镇子的时候，停下来买了双胶鞋，还有袜子，换上后暖和多了，后来又找地方补胎，还等老板等了挺久，到宣称的时候已经比预定计划慢了2个多小时了。&lt;/p&gt;

&lt;p&gt;下午宣称到芜湖的路更刺激，一路全是小山坡，也不高，也不陡，但是200米一个，200米一个，一直延续了估计有20多公里。&lt;/p&gt;

&lt;p&gt;晚上6点左右里芜湖还有30公里左右的时候，同学发来短信询问我是否还活着，收到短信后的一分钟内，我的后胎又暴了。再换上刚补好的备用胎，奇怪的是，一分钟后后胎气又没了，折腾了半个多小时，差点绝望了，也差一点放弃了，都准备打车回家了，但转念一想，400公里马上只有30公里了，一路上雨也淋了，雪也下了，山路也爬了，在家门口的地方胎暴了搞不定，多郁闷，于是又仔细检查一遍，才发现胎的气嘴没有完全拔出来，就会跑气，虽不明就里，但正常安装好后就解决了问题，终于可以再次上路。&lt;/p&gt;

&lt;p&gt;只记得最后的30公里好漫长，我是靠想象着回家后可以洗热水澡，可以换干净的衣服，还有我喜欢的蘑菇鸡蛋汤，还有好多的我喜欢吃的菜，靠着对这些的想象，坚持骑完了最后30公里。到家时都10点多了，最后天骑了150公里。&lt;/p&gt;

&lt;p&gt;我总是相信过程比结果更开心，更重要，像这条回家的路，漫长，而又需要时刻在路上找寻快乐，找寻美，也许是路边的风景，也许是沿途遇到的人们，也许是一路上的引吭高唱，总之，我们无法为了赶路而赶路，如果我们没有办法在这漫长的旅途中找寻到快乐，那么到达终点的那天，注定也不会快乐，即使已经到达了终点——因为一路没有留下回忆。&lt;/p&gt;

&lt;p&gt;以前长途骑行，当发现已经落后计划时间时，常会感到焦躁，加速，减少休息时间，补给买瓶水都要匆匆忙忙，而现在终于明白，如果这条路很漫长，更需要的是——淡定，估计出新的到达时间，做好安排，正常休息，午饭后小睡十多分钟，注意欣赏沿途的风景，找到放松的节奏，最终才能快乐地到达终点。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>练习曲 独自旅行的故事</title>
   <link href="http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2010/07/26/%E7%BB%83%E4%B9%A0%E6%9B%B2-%E7%8B%AC%E8%87%AA%E6%97%85%E8%A1%8C%E7%9A%84%E6%95%85%E4%BA%8B"/>
   <updated>2010-07-26T00:00:00+08:00</updated>
   <id>http://username.github.io/%E5%9C%A8%E8%B7%AF%E4%B8%8A/2010/07/26/练习曲-独自旅行的故事</id>
   <content type="html">&lt;p&gt;每一个曾独自旅行过的人都能从影片中找到自己的身影，还有那淡淡的宁静和孤独的气息，空旷的公路，辽阔的天空，以及在远端和天相接的地平线，排成排连接到地平线的高大的风车，像是自己某次旅行的经历，又像是在某个梦中的场景。&lt;/p&gt;

&lt;p&gt;在路上的感觉，自由，由自由而来的宁静，由宁静而来的孤独，以及由孤独而来的淡淡的忧伤，当透过这些感觉去看路上的风景，和那些在风景中的人们的时候，才发现，这一切是那么美，也许它的美是一如既往，只是我们从不曾发现。&lt;/p&gt;

&lt;p&gt;很喜欢影片里那种在路上的感觉，一辆自行车，一张地图，一个终点，没有人可以改变。在路上会有许多的不期而遇，和某个人在某个路口同行，在下一个路口分别，留下段美好的回忆，只因有各自的终点，生活其实也像是这样的一个过程，我们都有属于自己的最终的归宿。&lt;/p&gt;

&lt;p&gt;也不知从什么时候开始，我也喜欢上了这种孤独的旅行，也许是从那次高中时一个人骑车到60公里外的采石旅游时开始，也许从那年一个人去乌镇旅游开始，喜欢那种自由的在路上的感觉，无所牵绊。&lt;/p&gt;</content>
 </entry>
 
 
</feed>